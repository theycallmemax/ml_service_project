import streamlit as st
import pandas as pd
import json
from utils import check_authentication, get_predictions_history, get_prediction, get_transactions

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ò—Å—Ç–æ—Ä–∏—è",
    page_icon="üìÉ",
    layout="centered",
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.title("–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
current_user = check_authentication()

# –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –∏—Å—Ç–æ—Ä–∏–µ–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
tab1, tab2 = st.tabs(["–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", "–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π"])

# –¢–∞–± 1 - –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π)
with tab1:
    st.header("–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    response = get_predictions_history(st.session_state.token)

    if response.status_code == 200:
        predictions = response.json()
        if predictions and len(predictions) > 0:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            predictions_data = []
            for pred in predictions:
                status_map = {
                    "queued": "–í –æ—á–µ—Ä–µ–¥–∏",
                    "processing": "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è",
                    "completed": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ",
                    "failed": "–û—à–∏–±–∫–∞"
                }

                status = status_map.get(pred.get("status"), pred.get("status"))

                predictions_data.append({
                    "ID": pred.get("id"),
                    "–î–∞—Ç–∞": pred.get("created_at"),
                    "–ú–æ–¥–µ–ª—å": pred.get("model_id"),
                    "–°—Ç–∞—Ç—É—Å": status,
                })

            # –°–æ–∑–¥–∞–µ–º DataFrame –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
            df = pd.DataFrame(predictions_data)
            st.dataframe(df, use_container_width=True)
        else:
            st.info("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
    else:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")

# –¢–∞–± 2 - –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
with tab2:
    st.header("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å–∞")

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–∑ API
    transactions_response = get_transactions(st.session_state.token)

    if transactions_response.status_code == 200:
        transactions = transactions_response.json()

        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞"
        deposit_transactions = [
            t for t in transactions
            if t.get("description") == "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞" or
               (t.get("amount", 0) > 0 and "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" in t.get("description", "").lower())
        ]

        if deposit_transactions and len(deposit_transactions) > 0:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            transactions_data = []
            for transaction in deposit_transactions:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—É–º–º—É
                amount = transaction.get("amount", 0)

                transactions_data.append({
                    "ID": transaction.get("id"),
                    "–î–∞—Ç–∞": transaction.get("created_at"),
                    "–°—É–º–º–∞": f"{amount} –∫—Ä–µ–¥–∏—Ç–æ–≤",
                    "–°—Ç–∞—Ç—É—Å": transaction.get("status", "–í—ã–ø–æ–ª–Ω–µ–Ω–æ")
                })

            # –°–æ–∑–¥–∞–µ–º DataFrame –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ
            transactions_df = pd.DataFrame(transactions_data)
            st.dataframe(transactions_df, use_container_width=True)

        else:
            st.info("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")
    else:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
